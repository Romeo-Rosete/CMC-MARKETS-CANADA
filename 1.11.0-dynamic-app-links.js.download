/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/helpers.js":
/*!************************!*\
  !*** ./src/helpers.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"checkCookieExists\": () => (/* binding */ checkCookieExists),\n/* harmony export */   \"getConvertData\": () => (/* binding */ getConvertData),\n/* harmony export */   \"getCookieAsObj\": () => (/* binding */ getCookieAsObj),\n/* harmony export */   \"getCookie_\": () => (/* binding */ getCookie_),\n/* harmony export */   \"getDomain_\": () => (/* binding */ getDomain_),\n/* harmony export */   \"getFullRegionCode\": () => (/* binding */ getFullRegionCode),\n/* harmony export */   \"getRegion\": () => (/* binding */ getRegion),\n/* harmony export */   \"newCookieExpirationDate\": () => (/* binding */ newCookieExpirationDate),\n/* harmony export */   \"writeCookie_\": () => (/* binding */ writeCookie_)\n/* harmony export */ });\n/**\n * Get cookie as string\n * @param {*} name\n * @returns\n */\nfunction getCookie_(name) {\n  let cookies = \"; \" + document.cookie;\n  let cvals = cookies.split(\"; \" + name + \"=\");\n  if (cvals.length > 1) return cvals.pop().split(\";\")[0];\n}\nfunction checkCookieExists(name) {\n  return document.cookie.indexOf(name) >= 0;\n}\n/**\n * Create a cookie\n * @param {*} name\n * @param {*} value\n * @param {*} expiration\n * @param {*} path\n * @param {*} domain\n */\n\nfunction writeCookie_(name, value, expiration, path, domain) {\n  let str = name + \"=\" + value + \";\";\n  if (expiration) str += \"Expires=\" + expiration.toGMTString() + \";\";\n  if (path) str += \"Path=\" + path + \";\";\n  if (domain) str += \"Domain=\" + domain + \";\";\n  document.cookie = str;\n}\n/**\n * Get domain\n * @param {} url\n * @returns\n */\n\nfunction getDomain_(url) {\n  if (!url) return;\n  let a = document.createElement(\"a\");\n  a.href = url;\n\n  try {\n    return a.hostname.match(/[^.]*\\.[^.]{2,3}(?:\\.[^.]{2,3})?$/)[0];\n  } catch (squelch) {}\n}\n/**\n * Get cookie as an object\n * @returns\n */\n\nfunction getCookieAsObj(cookieName) {\n  const cookie = getCookie_(cookieName)?.split(\"|\") ?? null; // If cookie doesn't exist, return null\n\n  if (cookie === null) {\n    return null;\n  }\n\n  const cookieAsObj = {};\n  cookie.forEach(element => {\n    const cookieKeyValuePair = element.split(\"=\");\n    cookieAsObj[cookieKeyValuePair[0]] = cookieKeyValuePair[1];\n  });\n  return cookieAsObj;\n}\n/**\n * Get the region of the current page\n * @returns\n */\n\nfunction getRegion() {\n  const region = document.querySelector(\"body\").getAttribute(\"data-region\");\n\n  if (!region) {\n    document.querySelector(\"html\").getAttribute(\"lang\");\n  }\n\n  return region;\n}\n/**\n * Generate cookie expiration date. Current time + 30min\n * @returns\n */\n\nfunction newCookieExpirationDate() {\n  let cookieExpiration = new Date();\n  cookieExpiration.setMinutes(cookieExpiration.getMinutes() + 30);\n  return cookieExpiration;\n}\n/**\n * Get full region code\n * @returns\n */\n\nfunction getFullRegionCode() {\n  const bodyElm = document.querySelector(\"body\");\n\n  if (bodyElm.getAttribute(\"data-language\") && bodyElm.getAttribute(\"data-region\")) {\n    return bodyElm.getAttribute(\"data-language\") + \"_\" + bodyElm.getAttribute(\"data-region\");\n  }\n\n  if (bodyElm.getAttribute(\"data-language\")) {\n    return bodyElm.getAttribute(\"data-language\");\n  }\n\n  return \"\";\n}\n/**\n * Update user attributes from the Convert AB testing script\n */\n\nfunction getConvertData() {\n  // Filter the array by the event key and value\n  function findConvertObj(array, eventValue) {\n    // Loop through the array and check each object\n    for (let i = 0; i < array.length; i++) {\n      // Get the current object\n      let obj = array[i]; // Check if the object has an event key and its value starts with the eventValue\n\n      if (obj.event && obj.event.startsWith(eventValue)) {\n        return obj;\n      }\n    }\n\n    return null;\n  }\n\n  const convertObj = findConvertObj(window.dataLayer, \"convert-trigger-experiment\");\n  return convertObj;\n}\n\n//# sourceURL=webpack://@cmctechnology/dynamic-mobile-app-links/./src/helpers.js?");

/***/ }),

/***/ "./src/markets/generateButtonLinks.js":
/*!********************************************!*\
  !*** ./src/markets/generateButtonLinks.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"generateButtonLinks\": () => (/* binding */ generateButtonLinks),\n/* harmony export */   \"generateFallBackButtonLinks\": () => (/* binding */ generateFallBackButtonLinks),\n/* harmony export */   \"generateLink\": () => (/* binding */ generateLink),\n/* harmony export */   \"getLinksToUpdate\": () => (/* binding */ getLinksToUpdate)\n/* harmony export */ });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers */ \"./src/helpers.js\");\n\n/**\n * Generate link\n * @returns\n */\n\nfunction generateLink(data) {\n  const baseURL = \"https://cmcmarkets.onelink.me/3oZk/\";\n  const oneLinkURL = baseURL;\n  const oneLinkObj = {};\n  let result_url = \"No output from script\"; // If cookie exists, populate with parameters\n\n  if (data !== null) {\n    const parameters = data;\n\n    if (parameters.utmcsr) {\n      oneLinkObj.mediaSource = {\n        keys: [\"utm_source\", \"utmcsr\"],\n        defaultValue: \"any_source\"\n      };\n    }\n\n    if (parameters.utmccn) {\n      oneLinkObj.campaign = {\n        keys: [\"utm_campaign\", \"utmccn\"],\n        defaultValue: \"any_campaign\"\n      };\n    }\n\n    if (parameters.utmcmd) {\n      oneLinkObj.channel = {\n        keys: [\"utm_channel\", \"utmcmd\"],\n        defaultValue: \"any_channel\"\n      };\n    }\n\n    if (parameters.utmad) {\n      oneLinkObj.ad = {\n        keys: [\"utm_ad\", \"utmad\"],\n        defaultValue: \"any_ad\"\n      };\n    }\n\n    if (parameters.utmadset) {\n      oneLinkObj.adSet = {\n        keys: [\"utm_adset\", \"utmadset\"],\n        defaultValue: \"any_utm_adset\"\n      };\n    }\n\n    if (parameters.utmctr) {\n      oneLinkObj.afSub1 = {\n        keys: [\"utm_term\", \"utmctr\"],\n        defaultValue: \"any_term\"\n      };\n    }\n\n    if (parameters.utmcct) {\n      oneLinkObj.afSub2 = {\n        keys: [\"utm_content\", \"utmcct\"],\n        defaultValue: \"any_content\"\n      };\n    }\n\n    if (parameters.path) {\n      oneLinkObj.afSub3 = {\n        keys: [\"utm_path\"],\n        defaultValue: window.location.pathname\n      };\n    }\n\n    if (parameters.utmgclid) {\n      oneLinkObj.afSub4 = {\n        keys: [\"gclid\", \"utmgclid\"],\n        defaultValue: \"any_gclid\"\n      };\n    }\n\n    oneLinkObj.afCustom = [{\n      paramKey: \"af_web_dp\",\n      keys: [\"af_web_dp\"],\n      defaultValue: getMobilePlatformUrl()\n    }, {\n      paramKey: \"cp1\",\n      keys: [\"cp1\"],\n      defaultValue: parameters?.cp1\n    }]; // Add convert data to button link\n\n    const convertData = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getConvertData)();\n\n    if (convertData !== null) {\n      oneLinkObj.afCustom.push(...[{\n        paramKey: \"convertEvent\",\n        keys: [\"convertEvent\"],\n        defaultValue: convertData?.event\n      }, {\n        paramKey: \"convertId\",\n        keys: [\"convertId\"],\n        defaultValue: convertData?.experiment_id\n      }, {\n        paramKey: \"convertVariationName\",\n        keys: [\"convertVariationName\"],\n        defaultValue: convertData?.variation_name.replace(\"Var #\", \"\")\n      }]);\n    }\n\n    oneLinkObj.googleClickIdKey = \"af_sub4\";\n    const result = window.AF_SMART_SCRIPT.generateOneLinkURL({\n      oneLinkURL,\n      afParameters: oneLinkObj,\n      useCookies: \"__utmzz\"\n    });\n\n    if (result) {\n      result_url = result.clickURL;\n    }\n  }\n\n  return result_url;\n}\n/**\n * Update button links targetting all existing adjust.com & cmcmarkets.page.link links\n */\n\nfunction generateButtonLinks(anchors) {\n  let generatedURL = \"\";\n  const cookieObject = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getCookieAsObj)(\"__utmzz\"); // Update all existing anchors\n\n  anchors.length > 0 && anchors.forEach(anchor => {\n    generatedURL = generateLink(cookieObject, anchor);\n    anchor.setAttribute(\"href\", generatedURL);\n  });\n}\n/**\n * Get all mobile app links to be updated\n * @returns\n */\n\nfunction getLinksToUpdate() {\n  const pageLinks = document.querySelectorAll(\"body a\");\n  const linksToUpdate = []; // Create array of links where URL contains app.adjust.com or cmcmarkets.page.link\n\n  pageLinks.forEach(link => {\n    if (link.href.includes(\"app.adjust.com\") || link.href.includes(\"cmcmarkets.page.link\") || link.href.includes(\"cmcmarkets.onelink.me\")) {\n      linksToUpdate.push(link);\n    }\n  });\n  return linksToUpdate;\n}\n/**\n * Generate fallback urls which are used whilst we wait for mParticle to initialise. If mParticle isn't present on the page, this fallback URL is used\n * @param {*} adjustLinks\n */\n\nfunction generateFallBackButtonLinks(anchors) {\n  // Create base/fallback URL if cookie doesn't exist\n  const baseURL = \"https://cmcmarkets.onelink.me/3oZk/\"; // Update all existing adjust links\n\n  anchors.length > 0 && anchors.forEach(anchor => {\n    let generatedURL = `${baseURL}`;\n    anchor.setAttribute(\"href\", generatedURL);\n  });\n}\n/**\n * Get the Mobile Platform URL based on current region.\n * If already on mobile platform page, link directly to app store page\n * @returns string\n */\n// const getMobilePlatformUrl = function (anchor = null) {\n//     // Custom OFL url override on the anchor\n//     if (anchor && anchor.dataset.oflCustom) {\n//         return anchor.dataset.oflCustom\n//     }\n//     const region = document.querySelector(\"html\").getAttribute(\"lang\") ?? null\n//     switch (region) {\n//         case \"de-at\":\n//             return \"https://www.cmcmarkets.com/de-at/handelsplattform/trading-apps\"\n//         case \"de-de\":\n//             return \"https://www.cmcmarkets.com/de-de/handelsplattform/trading-apps\"\n//         case \"en\":\n//             return \"https://www.cmcmarkets.com/en/trading-platform/mobile-trading\"\n//         case \"en-au\":\n//             return \"https://www.cmcmarkets.com/en-au/platform/cfd-trading-platform/mobile-trading\"\n//         case \"en-ca\":\n//             return \"https://www.cmcmarkets.com/en-ca/platform/mobile-trading\"\n//         case \"en-gb\":\n//             return \"https://www.cmcmarkets.com/en-gb/trading-platform/mobile-trading-app\"\n//         case \"en-ie\":\n//             return \"https://www.cmcmarkets.com/en-ie/trading-platform/mobile-trading\"\n//         case \"en-nz\":\n//             return \"https://www.cmcmarkets.com/en-nz/platform/mobile-trading\"\n//         case \"en-sg\":\n//             return \"https://www.cmcmarkets.com/en-sg/platform/mobile-trading\"\n//         case \"es-es\":\n//             return \"https://www.cmcmarkets.com/es-es/plataforma/trading-plataformas-moviles\"\n//         case \"fr-fr\":\n//             return \"https://www.cmcmarkets.com/fr-fr/plateforme/trading-mobile\"\n//         case \"it-it\":\n//             return \"https://www.cmcmarkets.com/it-it/piattaforma/trading-su-mobile\"\n//         case \"nb-no\":\n//             return \"https://www.cmcmarkets.com/nb-no/tradingplattform/mobil-trading\"\n//         case \"pl-pl\":\n//             return \"https://www.cmcmarkets.com/pl-pl/platforma/aplikacje-mobilne\"\n//         case \"sv-se\":\n//             return \"https://www.cmcmarkets.com/sv-se/handelsplattform/appar\"\n//         case \"zh\":\n//             return \"https://www.cmcmarkets.com/zh/platform/mobile-trading\"\n//         case \"zh-au\":\n//             return \"https://www.cmcmarkets.com/zh-au/platform/mobile-trading\"\n//         case \"zh-sg\":\n//             return \"https://www.cmcmarkets.com/zh-sg/platform/mobile-trading\"\n//         case \"zh-nz\":\n//             return \"https://www.cmcmarkets.com/zh-nz/platform/mobile-trading\"\n//         default:\n//             return `https://www.cmcmarkets.com/${region ?? \"en\"}/platform/mobile-trading`\n//     }\n// }\n\nconst getMobilePlatformUrl = function (anchor = null) {\n  // Custom OFL url override on the anchor\n  if (anchor && anchor.dataset.oflCustom) {\n    return anchor.dataset.oflCustom;\n  }\n\n  const region = document.querySelector(\"html\").getAttribute(\"lang\") ?? null;\n\n  switch (region) {\n    case \"de-at\":\n      return \"https://www.cmcmarkets.com/de-at/handelsplattform/trading-apps\";\n\n    case \"de-de\":\n      return \"https://www.cmcmarkets.com/de-de/handelsplattform/trading-apps\";\n\n    case \"en\":\n      return \"https://www.cmcmarkets.com/en/trading-platform/mobile-trading\";\n\n    case \"en-au\":\n      return \"https://www.cmcmarkets.com/en-au/platform/cfd-trading-platform/mobile-trading\";\n\n    case \"en-ca\":\n      return \"https://www.cmcmarkets.com/en-ca/platform/mobile-trading\";\n\n    case \"en-gb\":\n      return \"https://www.cmcmarkets.com/en-gb/trading-platforms/mobile-trading-app\";\n\n    case \"en-ie\":\n      return \"https://www.cmcmarkets.com/en-ie/trading-platform/mobile-trading\";\n\n    case \"en-nz\":\n      return \"https://www.cmcmarkets.com/en-nz/platform/mobile-trading\";\n\n    case \"en-sg\":\n      return \"https://www.cmcmarkets.com/en-sg/platform/mobile-trading\";\n\n    case \"es-es\":\n      return \"https://www.cmcmarkets.com/es-es/plataforma/trading-plataformas-moviles\";\n\n    case \"fr-fr\":\n      return \"https://www.cmcmarkets.com/fr-fr/plateforme/trading-mobile\";\n\n    case \"it-it\":\n      return \"https://www.cmcmarkets.com/it-it/piattaforma/trading-su-mobile\";\n\n    case \"nb-no\":\n      return \"https://www.cmcmarkets.com/nb-no/tradingplattform/mobil-trading\";\n\n    case \"pl-pl\":\n      return \"https://www.cmcmarkets.com/pl-pl/platforma/aplikacje-mobilne\";\n\n    case \"sv-se\":\n      return \"https://www.cmcmarkets.com/sv-se/handelsplattform/appar\";\n\n    case \"zh\":\n      return \"https://www.cmcmarkets.com/zh/platform/mobile-trading\";\n\n    case \"zh-au\":\n      return \"https://www.cmcmarkets.com/zh-au/platform/mobile-trading\";\n\n    case \"zh-sg\":\n      return \"https://www.cmcmarkets.com/zh-sg/platform/mobile-trading\";\n\n    case \"zh-nz\":\n      return \"https://www.cmcmarkets.com/zh-nz/platform/mobile-trading\";\n\n    default:\n      return `https://www.cmcmarkets.com/${region ?? \"en\"}/platform/mobile-trading`;\n  }\n};\n\n//# sourceURL=webpack://@cmctechnology/dynamic-mobile-app-links/./src/markets/generateButtonLinks.js?");

/***/ }),

/***/ "./src/markets/generateCookie.js":
/*!***************************************!*\
  !*** ./src/markets/generateCookie.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"generateCookie\": () => (/* binding */ generateCookie)\n/* harmony export */ });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers */ \"./src/helpers.js\");\n\nfunction generateCookie() {\n  // If cookie already exists & the referrer is cmc &, don't update cookie.\n  // The cookie should always update when coming from a new source/domain.\n  // The CP1 cookie value should always update when the referrer is CMC\n  if ((0,_helpers__WEBPACK_IMPORTED_MODULE_0__.checkCookieExists)(\"__utmzz\")) {\n    console.log(\"__utmzz cookie found.\"); // updateCP1Value();\n\n    return;\n  }\n\n  function parseGoogleParams(str) {\n    var campaignParams = [\"source\", \"medium\", \"campaign\", \"term\", \"content\"];\n    var regex = new RegExp(\"((utm|gtm)_(\" + campaignParams.join(\"|\") + \")|(d|g)clid)=.*?([^&#]*|$)\", \"gi\");\n    var gaParams = str.match(regex);\n    var paramsObj, vals, len, i;\n\n    if (gaParams) {\n      paramsObj = {};\n      len = gaParams.length;\n\n      for (i = 0; i < len; i++) {\n        vals = gaParams[i].split(\"=\");\n\n        if (vals) {\n          paramsObj[vals[0]] = vals[1];\n        }\n      }\n    }\n\n    return paramsObj;\n  }\n\n  function parseGaReferrer(referrer) {\n    if (!referrer) return;\n    var searchEngines = {\n      \"360.cn\": {\n        p: \"q\",\n        n: \"360.cn\"\n      },\n      \"alice.com\": {\n        p: \"qs\",\n        n: \"alice\"\n      },\n      \"alltheweb.com\": {\n        p: \"q\",\n        n: \"alltheweb\"\n      },\n      \"ask.com\": {\n        p: \"q\",\n        n: \"ask\"\n      },\n      \"altavista.com\": {\n        p: \"q\",\n        n: \"altavista\"\n      },\n      \"search.auone.jp\": {\n        p: \"q\",\n        n: \"auone.jp\"\n      },\n      \"isearch.avg.com\": {\n        p: \"q\",\n        n: \"avg\"\n      },\n      \"aol.com\": {\n        p: \"q\",\n        n: \"aol\"\n      },\n      \"baidu.com\": {\n        p: \"wd\",\n        n: \"baidu\"\n      },\n      \"bing.com\": {\n        p: \"q\",\n        n: \"bing\"\n      },\n      \"cnn.com\": {\n        p: \"query\",\n        n: \"cnn\"\n      },\n      \"daum.net\": {\n        p: \"q\",\n        n: \"daum\"\n      },\n      \"duckduckgo.com\": {\n        p: \"q\",\n        n: \"duckduckgo\"\n      },\n      \"ekolay.net\": {\n        p: \"q\",\n        n: \"ekolay\"\n      },\n      \"eniro.se\": {\n        p: \"search_word\",\n        n: \"eniro \"\n      },\n      \"naver.com\": {\n        p: \"query\",\n        n: \"naver \"\n      },\n      \"msn.com\": {\n        p: \"q\",\n        n: \"msn\"\n      },\n      \"lycos.com\": {\n        p: \"q\",\n        n: \"lycos\"\n      },\n      \"mamma.com\": {\n        p: \"query\",\n        n: \"mama\"\n      },\n      \"kvasir.no\": {\n        p: \"q\",\n        n: \"kvasir\"\n      },\n      \"mynet.com\": {\n        p: \"q\",\n        n: \"mynet\"\n      },\n      \"najdi.org.mk\": {\n        p: \"q\",\n        n: \"najdi\"\n      },\n      \"online.onetcenter.org\": {\n        p: \"qt\",\n        n: \"o*net\"\n      },\n      \"ozu.es\": {\n        p: \"q\",\n        n: \"ozu \"\n      },\n      \"pchome.com\": {\n        p: \"q\",\n        n: \"pchome\"\n      },\n      \"rambler.ru\": {\n        p: \"words\",\n        n: \"rambler\"\n      },\n      \"sesam.no\": {\n        p: \"q\",\n        n: \"sesam\"\n      },\n      \"seznam.cz\": {\n        p: \"q\",\n        n: \"seznam\"\n      },\n      \"search.com\": {\n        p: \"q\",\n        n: \"search\"\n      },\n      \"search.netscape.com\": {\n        p: \"query\",\n        n: \"netscape\"\n      },\n      \"search.virgilio.it\": {\n        p: \"qs\",\n        n: \"virgilio\"\n      },\n      \"szukacz.pl\": {\n        p: \"q\",\n        n: \"szukacz\"\n      },\n      \"terra.com\": {\n        p: \"query\",\n        n: \"terra\"\n      },\n      \"voila.fr\": {\n        p: \"rdata\",\n        n: \"voila\"\n      },\n      \"wp.pl\": {\n        p: \"szukaj \",\n        n: \"wirtulana polska\"\n      },\n      \"yahoo.com\": {\n        p: \"p\",\n        n: \"yahoo\"\n      },\n      \"yam.com\": {\n        p: \"k\",\n        n: \"yam\"\n      },\n      \"yandex.com\": {\n        p: \"text\",\n        n: \"yandex\"\n      },\n      \"yandex.ru\": {\n        p: \"text\",\n        n: \"yandex\"\n      },\n      google: {\n        p: \"q\",\n        n: \"google\"\n      }\n    };\n    var a = document.createElement(\"a\");\n    var values = {};\n    var searchEngine, termRegex, term;\n    a.href = referrer;\n\n    if (a.hostname.indexOf(\"google\") > -1) {\n      referringDomain = \"google\";\n    }\n\n    if (referringDomain && referringDomain.startsWith(\"www.\")) {\n      referringDomain = referringDomain.replace(\"www.\", \"\");\n    }\n\n    if (searchEngines[referringDomain]) {\n      searchEngine = searchEngines[referringDomain];\n      termRegex = new RegExp(searchEngine.p + \"=.*?([^&#]*|$)\", \"gi\");\n      term = a.search.match(termRegex);\n      values.source = searchEngine.n;\n      values.medium = \"organic\";\n      values.term = (term ? term[0].split(\"=\")[1] : \"\") || \"(not provided)\"; // YAHOO LOGIC\n\n      if (referringDomain.includes(\"yahoo\")) {\n        const yahooUrl = new URL(referrer);\n        const urlWithoutProtocol = yahooUrl.hostname; // yahoo regex\n\n        const yahooRegex1 = /^(r\\.)?search\\.yahoo\\.[a-z]+(\\.[a-z]+)?$/i; //r.search.yahoo.com or search.yahoo.com or search.yahoo.something.domain\n\n        const yahooRegex2 = /^(?!r\\.search\\.yahoo\\.com$)[a-z]+\\.search\\.yahoo\\.com$/; //anything.search.yahoo.com excluding r.search.yahoo.com\n\n        if (yahooRegex1.test(urlWithoutProtocol)) {\n          values.source = \"yahoo\";\n          values.medium = \"organic\";\n        } else if (yahooRegex2.test(urlWithoutProtocol)) {\n          values.source = a.hostname;\n          values.medium = \"referral\";\n        }\n      }\n    } else if (referringDomain !== thisDomain) {\n      values.source = a.hostname;\n      values.medium = \"referral\";\n    }\n\n    return values;\n  }\n  /**\n   * Get the existing cookie & update the CP1 value with the curent page path\n   * Only updates if __utmzz cookie already exists & page referrer is cmcmarkets.com\n   */\n\n\n  function updateCP1Value() {\n    const currentCookieValue = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getCookie_)(\"__utmzz\");\n    const urlPath = window.location.pathname; // Get value between \"|cp1=\" and closing \"|\" (if any) - e.g: \"|cp1=/en-gb/trading-platform/|\" would return \"/en-gb/trading-platform\"\n\n    let currentCP1Value = currentCookieValue.match(/\\bcp1=([^|]*)/);\n\n    if (currentCP1Value === null || !currentCP1Value.length > 1) {\n      return;\n    }\n\n    currentCP1Value = currentCP1Value[1];\n    currentCP1Value = `cp1=${currentCP1Value}`;\n    const updatedCookieValue = currentCookieValue.replace(currentCP1Value, `cp1=${urlPath}`);\n    const thisDomain = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getDomain_)(document.location.hostname);\n    const cookieExpiration = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.newCookieExpirationDate)(); // Overwrite existing cookie with same cookie values & updated CP1 value\n\n    (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.writeCookie_)(\"__utmzz\", updatedCookieValue, cookieExpiration, \"/\", thisDomain);\n  }\n\n  var referrer = document.referrer;\n  var gaReferral = {\n    utmcsr: \"(direct)\",\n    utmcmd: \"(direct)\",\n    utmccn: \"(not set)\"\n  };\n  var thisHostname = document.location.hostname;\n  var thisDomain = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getDomain_)(thisHostname);\n  var referringDomain = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getDomain_)(document.referrer);\n  var sessionCookie = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getCookie_)(\"__utmzzses\");\n  const cookieExpiration = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.newCookieExpirationDate)();\n  var qs = document.location.search.replace(\"?\", \"\");\n  var hash = document.location.hash.replace(\"#\", \"\");\n  var gaParams = parseGoogleParams(qs + \"#\" + hash);\n  var referringInfo = parseGaReferrer(referrer);\n  var storedVals = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getCookie_)(\"__utmz\") || (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getCookie_)(\"__utmzz\");\n  var newCookieVals = [];\n  var keyMap = {\n    gtm_source: \"utmcsr\",\n    gtm_medium: \"utmcmd\",\n    gtm_campaign: \"utmccn\",\n    gtm_content: \"utmcct\",\n    gtm_term: \"utmctr\",\n    utm_source: \"utmcsr\",\n    utm_medium: \"utmcmd\",\n    utm_campaign: \"utmccn\",\n    utm_content: \"utmcct\",\n    utm_term: \"utmctr\",\n    utm_ad: \"utmad\",\n    utm_adset: \"utmadset\",\n    gclid: \"utmgclid\",\n    dclid: \"utmdclid\"\n  };\n\n  var keyName, values, _val, _key, raw, key, len, i;\n\n  if (referringDomain === thisDomain) {\n    gaParams = null;\n    referringInfo = null;\n  } // Check if gaParams object exists and has any of the following properties: gtm_source, gclid, dclid\n\n\n  if (gaParams) {\n    // Loop through all the properties of gaParams\n    for (key in gaParams) {\n      // Check if the property value is not undefined\n      if (typeof gaParams[key] !== \"undefined\") {\n        // Get the corresponding key name from the keyMap object\n        keyName = keyMap[key]; // Assign the property value to the gaReferral object with the key name\n\n        gaReferral[keyName] = gaParams[key];\n      }\n    } // Check if gaParams has only gclid property and not dclid property\n\n\n    if (gaParams.gclid && !gaParams.dclid) {\n      // Set utmcsr and utmcmd parameters as google/cpc\n      gaReferral.utmcsr = gaParams.utm_source ? gaParams.utm_source : gaParams.gtm_source ? gaParams.gtm_source : \"google\";\n      gaReferral.utmcmd = gaParams.utm_medium ? gaParams.utm_medium : gaParams.gtm_medium ? gaParams.gtm_medium : \"cpc\"; // Check if gaParams has only dclid property and not gclid property\n    } else if (gaParams.dclid && !gaParams.gclid) {\n      // Set utmcsr and utmcmd parameters as google/cpm\n      gaReferral.utmcsr = gaParams.utm_source ? gaParams.utm_source : gaParams.gtm_source ? gaParams.gtm_source : \"google\";\n      gaReferral.utmcmd = gaParams.utm_medium ? gaParams.utm_medium : gaParams.gtm_medium ? gaParams.gtm_medium : \"cpm\"; // Otherwise\n    } else {\n      // Read the values from the utm_source and utm_medium properties and set utmcsr and utmcmd accordingly\n      gaReferral.utmcsr = gaParams.utm_source ? gaParams.utm_source : gaParams.gtm_source;\n      gaReferral.utmcmd = gaParams.utm_medium ? gaParams.utm_medium : gaParams.gtm_medium;\n    }\n  } else if (referringInfo) {\n    gaReferral.utmcsr = referringInfo.source;\n    gaReferral.utmcmd = referringInfo.medium;\n    if (referringInfo.term) gaReferral.utmctr = referringInfo.term;\n  } else if (storedVals) {\n    values = {};\n    raw = storedVals.split(\"|\");\n    len = raw.length;\n\n    for (i = 0; i < len; i++) {\n      _val = raw[i].split(\"=\");\n      _key = _val[0].split(\".\").pop();\n      values[_key] = _val[1];\n    }\n\n    gaReferral = values;\n  } // Add optimizely\n\n\n  const optLayer = window.optLayer;\n\n  if (typeof optLayer != \"undefined\") {\n    gaReferral[\"optCampaign\"] = window.optLayer[0].campaign;\n    gaReferral[\"optExperiment\"] = window.optLayer[0].experiment;\n    gaReferral[\"optVariation\"] = window.optLayer[0].variation;\n  }\n\n  if (window.mParticle && window.mParticle.getInstance(\"default_instance\").Identity.getCurrentUser()) {\n    const mParticleUserId = window.mParticle.getInstance(\"default_instance\").Identity.getCurrentUser().getMPID();\n    gaReferral[\"MPID\"] = mParticleUserId;\n  }\n\n  const urlPath = window.location.pathname;\n  gaReferral[\"cp1\"] = urlPath;\n  const urlSearch = window.location.search;\n  const urlParams = new URLSearchParams(urlSearch);\n\n  if (urlSearch) {\n    const iaid = urlParams.get(\"iaid\");\n\n    if (iaid) {\n      gaReferral[\"iaid\"] = iaid;\n    }\n  }\n\n  for (key in gaReferral) {\n    if (typeof gaReferral[key] !== \"undefined\") {\n      newCookieVals.push(key + \"=\" + gaReferral[key]);\n    }\n  }\n\n  (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.writeCookie_)(\"__utmzz\", newCookieVals.join(\"|\"), cookieExpiration, \"/\", thisDomain);\n  (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.writeCookie_)(\"__utmzzses\", 1, cookieExpiration, \"/\", thisDomain);\n}\n\n//# sourceURL=webpack://@cmctechnology/dynamic-mobile-app-links/./src/markets/generateCookie.js?");

/***/ }),

/***/ "./src/markets/index.js":
/*!******************************!*\
  !*** ./src/markets/index.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _markets_generateCookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../markets/generateCookie */ \"./src/markets/generateCookie.js\");\n/* harmony import */ var _markets_generateButtonLinks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../markets/generateButtonLinks */ \"./src/markets/generateButtonLinks.js\");\n\n\n\nconst init = () => {\n  // Find all adjust links and create fallback mobile urls (this will be used in case mParticle doesn't initialize)\n  const linksToUpdate = (0,_markets_generateButtonLinks__WEBPACK_IMPORTED_MODULE_1__.getLinksToUpdate)();\n  (0,_markets_generateButtonLinks__WEBPACK_IMPORTED_MODULE_1__.generateFallBackButtonLinks)(linksToUpdate); // If mParticle is already initalised, initialise links\n\n  if (window.mParticle && window.mParticle.getInstance(\"default_instance\").Identity.getCurrentUser()) {\n    initLinks(linksToUpdate);\n    return;\n  } // If mParticle is not initalised yet, use event listener to initalise links once mParticle has loaded\n\n\n  window.addEventListener(\"mParticleInitialized\", e => {\n    if (window.mParticle && window.mParticle.getInstance(\"default_instance\").Identity.getCurrentUser()) {\n      initLinks(linksToUpdate);\n      return;\n    }\n  });\n};\n\nconst initLinks = linksToUpdate => {\n  (0,_markets_generateCookie__WEBPACK_IMPORTED_MODULE_0__.generateCookie)();\n  (0,_markets_generateButtonLinks__WEBPACK_IMPORTED_MODULE_1__.generateButtonLinks)(linksToUpdate);\n  const scriptInitialisedEvent = new Event(\"dynamicMobileAppLinkInitialized\");\n  window.dispatchEvent(scriptInitialisedEvent);\n};\n\ninit();\n\n//# sourceURL=webpack://@cmctechnology/dynamic-mobile-app-links/./src/markets/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/markets/index.js");
/******/ 	
/******/ })()
;